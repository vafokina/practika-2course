@model OldNewPasswordModel
@using DeliveryServiceWebDBServer.Models

@{
    ViewBag.Title = "Настройки";
}
@if (null != TempData["alertMessage"])
{
    <script type="text/javascript">
       alert("@TempData["alertMessage"]");
    </script>
}
<h4>Сохраненные отправители</h4>
@if (ViewBag.AccountReferences == null)
{<p>
        Нет сохраненных отправителей
    </p>}
else
{
    <table class="table">

        @foreach (AccountReference item in ViewBag.AccountReferences)
        {
            Person p = item.Person;
            string str1 = "";
            if (p.Name != null) { str1 += p.Name + " "; }
            if (p.MiddleName != null) { str1 += p.MiddleName + " "; }
            if (p.Surname != null) { str1 += p.Surname + ", "; }
            if (p.Company != null) { str1 += p.Company + ", "; }
            if (p.CityId != null)
            {
                if (p.City.Region.Country.NameCountry != null) { str1 += p.City.Region.Country.NameCountry + ", "; }
                if (p.City.Region.NameRegion != null) { str1 += p.City.Region.NameRegion + ", "; }
                if (p.City.NameCity != null) { str1 += p.City.NameCity + ", "; }
                if (p.Address != null) { str1 += p.Address + " "; }
            }
            if (p.CentreId != null)
            {
                str1 += "Пункт выдачи: ";
                if (p.DistributionCentre.City.Region.Country != null) { str1 += p.DistributionCentre.City.Region.Country.NameCountry + ", "; }
                if (p.DistributionCentre.City.Region != null) { str1 += p.DistributionCentre.City.Region.NameRegion + ", "; }
                if (p.DistributionCentre.City != null) { str1 += p.DistributionCentre.City.NameCity + ", "; }
                if (p.DistributionCentre != null) { str1 += p.DistributionCentre.Address + " "; }
            }
            if (p.InformingMail) { str1 += "Оповещения по почте "; }
            if (p.InformingSMS) { str1 += "Оповещения по SMS"; }

            <tr>
                <td>@str1</td>
                <td>@Html.ActionLink("Удалить", "DeleteReference", "UserSettings", new { id = item.Id }, null)</td>
            </tr>
        }
    </table>
}
<hr />
<h4>Изменение пароля</h4>
@using (Html.BeginForm("UpdatePassword", "UserSettings"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @*@Html.LabelFor(model => model.Login, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Текущий пароль</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2">Новый пароль</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Изменить" class="btn btn-default" />
            </div>
        </div>
    </div>
}


